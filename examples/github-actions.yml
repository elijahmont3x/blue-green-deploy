name: CI/CD with Blue-Green Deployment  # Changed from Backend CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run cleanup job every day at 2:00 AM UTC
    - cron: '0 2 * * *'

jobs:
  test-and-build:
    # ...build and test steps...
    
  deploy:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Copy deployment scripts and configuration templates
      - name: Copy deployment scripts to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "scripts/**,config/**"
          target: '/app/myapp'  # Changed from backend to myapp
          strip_components: 0
          overwrite: true
      
      # Copy application configuration files
      - name: Copy application files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml,Dockerfile"
          target: '/app/myapp'  # Changed from backend to myapp
          strip_components: 0
      
      # Deploy to Production
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        env:
          VERSION: ${{ needs.test-and-build.outputs.version }}
          IMAGE_REPO: "ghcr.io/example/myapp"  # Changed from backend to myapp
          # Application environment variables
          APP_API_ENDPOINT: ${{ vars.APP_API_ENDPOINT }}
          APP_CONFIG_VALUE: ${{ vars.APP_CONFIG_VALUE }}
          APP_SECRET_KEY: ${{ secrets.APP_SECRET_KEY }}
          APP_CORS_ORIGINS: ${{ vars.APP_CORS_ORIGINS }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: VERSION,IMAGE_REPO,APP_API_ENDPOINT,APP_CONFIG_VALUE,APP_SECRET_KEY,APP_CORS_ORIGINS
          script: |
            cd /app/myapp  # Changed from backend to myapp
            
            # Make scripts executable
            chmod +x ./scripts/*.sh
            
            # Export application-specific environment variables BEFORE deployment
            export APP_API_ENDPOINT="$APP_API_ENDPOINT"
            export APP_CONFIG_VALUE="$APP_CONFIG_VALUE"
            export APP_SECRET_KEY="$APP_SECRET_KEY"
            export APP_CORS_ORIGINS="$APP_CORS_ORIGINS"
            
            # Clean up failed deployments
            ./scripts/cleanup.sh --app-name=myapp --failed-only  # Changed from backend to myapp
            
            # Run the deployment
            ./scripts/deploy.sh "$VERSION" \
              --app-name=myapp \  # Changed from backend to myapp
              --image-repo=$IMAGE_REPO \
              --nginx-port=80 \
              --blue-port=8081 \
              --green-port=8082 \
              --health-endpoint=/health