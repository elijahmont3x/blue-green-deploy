# HTTPS Server Block
server {
    listen {{NGINX_SSL_PORT}} ssl http2 backlog=4096;
    listen [::]:{{NGINX_SSL_PORT}} ssl http2 backlog=4096;
    
    server_name {{DOMAIN_NAME}} {{DOMAIN_ALIASES}};
    
    # SSL configuration for {{DOMAIN_NAME}}
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # SSL settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # TLS protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy strict-origin-when-cross-origin;

    # OCSP Stapling
    ssl_trusted_certificate {{CERT_PATH}}/fullchain.pem;
    
    # Security headers
    include /etc/nginx/security_headers;
    
    # Health check endpoint for the proxy itself
    location /proxy-health {
        access_log off;
        return 200 "Nginx Proxy Healthy\n";
    }
    
    # OPTIONS request handling for CORS preflight
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }
    
    {{PATH_ROUTING}}
    
    # Default routing
    location / {
        proxy_pass http://{{APP_NAME}}-{{TARGET_ENV}};
        include /etc/nginx/proxy_params;
        include /etc/nginx/websocket_params;
    }
    
    # Static asset caching with HTTPS
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot)$ {
        proxy_pass http://{{APP_NAME}}-{{TARGET_ENV}};
        proxy_set_header Host $host;
        
        # Extensive caching
        expires 30d;
        add_header Cache-Control "public, no-transform";
        
        # Performance optimizations
        tcp_nodelay on;
        access_log off;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
