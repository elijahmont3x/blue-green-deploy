# Docker Compose override file for Blue/Green Deployment
# Environment: {{ENV_NAME}}
# App: {{APP_NAME}}
# Generated: {{TIMESTAMP}}

version: '3.8'

services:
  app:
    # Override service name to create unique containers
    container_name: {{APP_NAME}}-{{ENV_NAME}}-app
    # Override environment configuration for {{ENV_NAME}} environment
    environment:
      - ENV_NAME={{ENV_NAME}}
      - PORT={{PORT}}
      {{#NODE_ENV}}
      - NODE_ENV={{NODE_ENV}}
      {{/NODE_ENV}}
      {{#VERSION}}
      - VERSION={{VERSION}}
      {{/VERSION}}
      {{#DB_HOST}}
      - DB_HOST={{DB_HOST}}
      - DB_PORT={{DB_PORT}}
      - DB_NAME={{DB_NAME}}
      - DB_USER={{DB_USER}}
      {{/DB_HOST}}
    # Add standard labels
    labels:
      com.bgd.app: "{{APP_NAME}}"
      com.bgd.environment: "{{ENV_NAME}}"
      com.bgd.version: "{{VERSION}}"
    profiles:
      - {{ENV_NAME}}
    restart: unless-stopped
    {{#CUSTOM_NETWORK}}
    networks:
      - {{ENV_NAME}}-network
      {{#MASTER_PROXY_ENABLED}}
      - {{MASTER_PROXY_NAME}}-apps-network
      {{/MASTER_PROXY_ENABLED}}
    {{/CUSTOM_NETWORK}}
    {{#HEALTH_CHECK_OVERRIDE}}
    healthcheck:
      test: {{HEALTH_CHECK_COMMAND}}
      interval: {{HEALTH_CHECK_INTERVAL}}
      timeout: {{HEALTH_CHECK_TIMEOUT}}
      retries: {{HEALTH_CHECK_RETRIES}}
      start_period: {{HEALTH_CHECK_START_PERIOD}}
    {{/HEALTH_CHECK_OVERRIDE}}

  nginx:
    container_name: {{APP_NAME}}-{{ENV_NAME}}-nginx
    profiles:
      - {{ENV_NAME}}
    restart: unless-stopped
    {{#CUSTOM_NETWORK}}
    networks:
      - {{ENV_NAME}}-network
      {{#MASTER_PROXY_ENABLED}}
      - {{MASTER_PROXY_NAME}}-apps-network
      {{/MASTER_PROXY_ENABLED}}
    {{/CUSTOM_NETWORK}}
    # Override environment configuration for {{ENV_NAME}} environment
    {{#SSL_ENABLED}}
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx:/etc/nginx:ro
      - ./certs:/etc/nginx/certs:ro
      {{#CUSTOM_NGINX_CONFIG}}
      - {{CUSTOM_NGINX_CONFIG}}:/etc/nginx/conf.d/custom.conf:ro
      {{/CUSTOM_NGINX_CONFIG}}
    {{/SSL_ENABLED}}
    {{#NGINX_CLIENT_MAX_BODY_SIZE}}
    environment:
      - NGINX_CLIENT_MAX_BODY_SIZE={{NGINX_CLIENT_MAX_BODY_SIZE}}
    {{/NGINX_CLIENT_MAX_BODY_SIZE}}

  {{#DB_SERVICE}}
  # Database service for {{ENV_NAME}} environment
  db:
    image: {{DB_IMAGE}}
    container_name: {{APP_NAME}}-{{ENV_NAME}}-db
    restart: unless-stopped
    environment:
      {{#POSTGRES_DB}}
      - POSTGRES_DB={{POSTGRES_DB}}
      - POSTGRES_USER={{POSTGRES_USER}}
      - POSTGRES_PASSWORD={{POSTGRES_PASSWORD}}
      {{/POSTGRES_DB}}
      {{#MYSQL_DATABASE}}
      - MYSQL_DATABASE={{MYSQL_DATABASE}}
      - MYSQL_USER={{MYSQL_USER}}
      - MYSQL_PASSWORD={{MYSQL_PASSWORD}}
      - MYSQL_ROOT_PASSWORD={{MYSQL_ROOT_PASSWORD}}
      {{/MYSQL_DATABASE}}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - {{ENV_NAME}}-network
  {{/DB_SERVICE}}

  {{#REDIS_SERVICE}}
  # Redis service for {{ENV_NAME}} environment
  redis:
    image: redis:alpine
    container_name: {{APP_NAME}}-{{ENV_NAME}}-redis
    restart: unless-stopped
    networks:
      - {{ENV_NAME}}-network
  {{/REDIS_SERVICE}}

{{#CUSTOM_NETWORK}}
networks:
  {{ENV_NAME}}-network:
    name: {{APP_NAME}}-{{ENV_NAME}}-network
  {{#MASTER_PROXY_ENABLED}}
  {{MASTER_PROXY_NAME}}-apps-network:
    external: true
  {{/MASTER_PROXY_ENABLED}}
{{/CUSTOM_NETWORK}}

{{#CUSTOM_VOLUMES}}
volumes:
  db-data:
    name: {{APP_NAME}}-{{ENV_NAME}}-db-data
  {{#REDIS_DATA}}
  redis-data:
    name: {{APP_NAME}}-{{ENV_NAME}}-redis-data
  {{/REDIS_DATA}}
{{/CUSTOM_VOLUMES}}